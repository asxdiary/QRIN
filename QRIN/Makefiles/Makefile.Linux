CP := /bin/cp -p
LN := ln -s

###############################################################################
CC := gcc 
DEPCC := gcc -MM

CXX := g++ 
DEPCXX := g++ -MM

FF := g77
DEPFF := g77 -MM

ARCH=$(shell arch)

###############################################################################

compilerOptFlags := -O -O1 -O2 -O3 -O4 -O5 -O6

CXXFLAGS += -std=c++11

ifeq ($(OptLevel),-O)
    OPTFLAG = -O6
else
    OPTFLAG = $(OptLevel)
endif

ifneq (,$(filter $(compilerOptFlags),$(OptLevel)))
    # If any optimization flag occurs then:
    CXXFLAGS += -DNDEBUG
#    CXXFLAGS += -DCOIN_ASSERT
else
#   so can zap memory to avoid false reports
    CXXFLAGS += -DZEROFAULT
endif

ifeq (,$(filter -g,$(OptLevel)))
    ifneq ($(PROFILE),true)
	CXXFLAGS += -fomit-frame-pointer
    endif
    ifneq ($(ARCH),alpha)
        CXXFLAGS += -ffast-math
    endif
endif

ifeq ($(ARCH),x86_64)
        CXXFLAGS += -march=k8
else
	CXXFLAGS += -march=$(ARCH)
endif


# If you want to try Barrier uncomment some of these
# At present up to you to point to libraries
# Wssmp 1 is from OSL 2 is from Alphaworks etc
#CXXFLAGS += -DWSSMP_BARRIER=2
# Ordering and factorization from TAUCS (see header file for LAPACK modification)
#CXXFLAGS += -DTAUCS_BARRIER

###############################################################################

SYSLD +=
STATICSYSLD += -static -lpthread

###############################################################################

# It's OK to specify this even if static executable is created.
SHLINKPREFIX := -Wl,-rpath,

SHARED_LIBEXT := .so
STATIC_LIBEXT := .a

ifeq (${LibType},SHARED)
  LD  := $(CXX) -o
  LIBLDFLAGS := -shared
  LIBEXT := $(SHARED_LIBEXT)
  CXXFLAGS += -fPIC
else
  LD  := ar -q
  LIBLDFLAGS :=
  LIBEXT := $(STATIC_LIBEXT)
  CXXFLAGS +=
endif

EFENCE := -lefence
